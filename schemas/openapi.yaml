openapi: 3.0.0
info:
  version: 1.0.0
  title: The Canine Shelter API
  description: A simple dog listing API
  contact:
    name: Syam Marcus
    email: marcuss@coventry.ac.uk
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://ecology-fiction-3000.codio-box.uk/TCS/'
    description: Development server
components:
  securitySchemes:
    basicAuth: 
      type: http
      scheme: basic
      
tags:
- name: Listings
  description: Access and perform CRUD operations on dog listings
- name: Users
  description: API endpoints for user management
- name: Images
  description: API endpoints for image management
paths:
  /listings:
    get:
      tags:
        - Listings
      description:
        Get all dog listings with pagiation
      responses:
        '200':
          description: Successful retrieval of all dog listings
          content:
            application/json:
              schema:
                $ref: ./listing.json#/definitions/listing
        '404':
          description: Unsuccessful retrieval of all dog listings
    post:
      tags:
        - Listings
      security:
        - basicAuth: []
      description:
        Create a new dog listing
      requestHeader:
        description: Username and Password
        required: true
      requestBody:
        required: true
        description: All new listing data.
        content:
          application/json:
            schema:
              $ref: ./listing.json#/definitions/listing
      responses:
        '201':
          description: Upload created listing after validation
          content:
            application/json:
              schema:
                $ref: ./listing.json#/definitions/listingChanged
        '400':
          description: Failed validation and did not upload created listing 
        '401':
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
        '403':
          description: User role does not have permission
  /listings/search:
    parameters:
      - in: path
        name: q
        schema:
          type: string
        required: true
        description: Search query to find matching listings
    get:
      tags:
        - Listings
      description:
        Get all dog listings matching the search query
      responses:
        '200':
          description: Successful retrieval of dog listings matching search
          content:
            application/json:
              schema:
                $ref: ./listing.json#/definitions/listing
        '404':
          description: Unsuccessful retrieval of dog listings matching search
  /listings/account:
    parameters:
      - in: user
        name: ID
        schema:
          type: integer
        required: true
        description: ID of the authenticated user used to fetch listings
    get:
      tags:
        - Listings
      security:
        - basicAuth: []
      description:
        Get all dog listings matching the author ID
      requestHeader:
        description: Username and Password
        required: true
      responses:
        '200':
          description: Successful retrieval of dog listings matching author ID
          content:
            application/json:
              schema:
                $ref: ./listing.json#/definitions/listing
        '404':
          description: Unsuccessful retrieval of dog listings matching author ID
        '401':
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
        '403':
          description: User role does not have permission
  /listings/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: Numeric id of the listing
    get:
      tags:
        - Listings
      description:
        Get dog listings by listings ID
      responses:
        '200':
          description: Successful retrieval of specified dog listings
          content:
            application/json:
              schema:
                $ref: ./listing.json#/definitions/listing
        '404':
          description: Unsuccessful retrieval of specified dog listings
    put:
      tags:
        - Listings
      security:
        - basicAuth: []
      description:
        Update dog listing specified by ID
      requestHeader:
        description: Username and Password
        required: true
      requestBody:
        description: New information to update specified listing with.
        required: true
        content:
          application/json:
            schema:
              $ref: ./listing.json#/definitions/listing
      responses:
        '201':
          description: Successful update of a listing after validation
          content:
            application/json:
              schema:
                $ref: ./listing.json#/definitions/listingChanged
        '400':
          description: Failed validation and did not update listing 
        '401':
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
        '403':
          description: User role does not have permission
    del:
      tags:
        - Listings
      security:
        - basicAuth: []
      description:
        Delete dog listing specified by ID
      requestHeader:
        description: Username and Password
        required: true
      responses:
        '201':
          description: Successful deletion of specified dog listing
          content:
            application/json:
              schema:
                $ref: ./listing.json#/definitions/listingChanged
        '404':
          description: Failure to find and delete specified dog listing
        '401':
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
        '403':
          description: User role does not have permission
            
  /register:
    post:
      tags:
        - Users
      description:
        Create a new user account
      requestBody:
        description: All new user data.
        required: true
        content:
          application/json:
            schema:
              $ref: ./user.json#/definitions/user
      responses:
        '201':
          description: Successfully create a new user after validation
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/userCreated
        '400':
          description: Failed validation and did not upload created new user 
  /register/search:
    parameters:
      - in: path
        name: code
        schema:
          type: string
        required: true
        description: Search query to check employee code
    get:
      tags:
        - Users
      description:
        Check if employee code in search query exists in the database
      responses:
        '200':
          description: The search query was successful
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/user
        '404':
          description: Unsuccessful retrieval of search results
  /register/login:
    post:
      tags:
        - Users
      security:
        - basicAuth: []
      description:
        authentication of a username and password using basic auth
      requestHeader:
        description: Username and Password
        required: true
      responses:
        '200':
          description: The user was successfuly authenticated
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/userEmployeeCode
        '401':
          description: Authentication information is missing or invalid
          headers:
            WWW_Authenticate:
              schema:
                type: string
  
  /images/{uuid}:
    get:
      tags:
        - Images
      description:
        download specified image matching uuid parameter
      responses:
        '200':
          description: Successful download of an image
          content:
            multipart/form-data:
              type: object
              properties:
                path:
                  type: integer
        '404':
          description: Failed to download specified image
        '500':
          description: Server error downloading image
  /images:
    post:
      tags:
        - Images
      description:
        upload specified image matching uuid parameter
      responses:
        '201':
          description: Successful upload of an image
          content:
            multipart/form-data:
              type: object
              properties:
                path:
                  type: integer
        '500':
          description: Server error uploading image

